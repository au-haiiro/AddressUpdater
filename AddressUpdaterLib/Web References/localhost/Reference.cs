//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:2.0.50727.3074
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// このソース コードは Microsoft.VSDesigner、バージョン 2.0.50727.3074 によって自動生成されました。
// 
#pragma warning disable 1591

namespace HisoutenSupportTools.AddressUpdater.Lib.localhost {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AddressServicePortBinding", Namespace="http://addressService.bngper/")]
    public partial class AddressService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback registerHostOperationCompleted;
        
        private System.Threading.SendOrPostCallback unregisterHostOperationCompleted;
        
        private System.Threading.SendOrPostCallback getServerVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback getServerSettingOperationCompleted;
        
        private System.Threading.SendOrPostCallback clearHostsOperationCompleted;
        
        private System.Threading.SendOrPostCallback clearChatOperationCompleted;
        
        private System.Threading.SendOrPostCallback addAnnounceOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeAnnounceOperationCompleted;
        
        private System.Threading.SendOrPostCallback clearAnnounceOperationCompleted;
        
        private System.Threading.SendOrPostCallback forceRegisterHostOperationCompleted;
        
        private System.Threading.SendOrPostCallback forceUnregisterHostOperationCompleted;
        
        private System.Threading.SendOrPostCallback forceSetFightingOperationCompleted;
        
        private System.Threading.SendOrPostCallback addAdminChatOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAddressByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback setEnableRemoteAdminOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback enterOperationCompleted;
        
        private System.Threading.SendOrPostCallback setFightingOperationCompleted;
        
        private System.Threading.SendOrPostCallback addChatOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback leaveOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public AddressService() {
            this.Url = global::HisoutenSupportTools.AddressUpdater.Lib.Properties.Settings.Default.AddressUpdaterLib_localhost_AddressService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event registerHostCompletedEventHandler registerHostCompleted;
        
        /// <remarks/>
        public event unregisterHostCompletedEventHandler unregisterHostCompleted;
        
        /// <remarks/>
        public event getServerVersionCompletedEventHandler getServerVersionCompleted;
        
        /// <remarks/>
        public event getServerSettingCompletedEventHandler getServerSettingCompleted;
        
        /// <remarks/>
        public event clearHostsCompletedEventHandler clearHostsCompleted;
        
        /// <remarks/>
        public event clearChatCompletedEventHandler clearChatCompleted;
        
        /// <remarks/>
        public event addAnnounceCompletedEventHandler addAnnounceCompleted;
        
        /// <remarks/>
        public event removeAnnounceCompletedEventHandler removeAnnounceCompleted;
        
        /// <remarks/>
        public event clearAnnounceCompletedEventHandler clearAnnounceCompleted;
        
        /// <remarks/>
        public event forceRegisterHostCompletedEventHandler forceRegisterHostCompleted;
        
        /// <remarks/>
        public event forceUnregisterHostCompletedEventHandler forceUnregisterHostCompleted;
        
        /// <remarks/>
        public event forceSetFightingCompletedEventHandler forceSetFightingCompleted;
        
        /// <remarks/>
        public event addAdminChatCompletedEventHandler addAdminChatCompleted;
        
        /// <remarks/>
        public event getAddressByIdCompletedEventHandler getAddressByIdCompleted;
        
        /// <remarks/>
        public event setEnableRemoteAdminCompletedEventHandler setEnableRemoteAdminCompleted;
        
        /// <remarks/>
        public event getUserCountCompletedEventHandler getUserCountCompleted;
        
        /// <remarks/>
        public event enterCompletedEventHandler enterCompleted;
        
        /// <remarks/>
        public event setFightingCompletedEventHandler setFightingCompleted;
        
        /// <remarks/>
        public event addChatCompletedEventHandler addChatCompleted;
        
        /// <remarks/>
        public event getAllDataCompletedEventHandler getAllDataCompleted;
        
        /// <remarks/>
        public event leaveCompletedEventHandler leaveCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://addressService.bngper/", ResponseNamespace="http://addressService.bngper/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void registerHost([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] host host) {
            this.Invoke("registerHost", new object[] {
                        host});
        }
        
        /// <remarks/>
        public void registerHostAsync(host host) {
            this.registerHostAsync(host, null);
        }
        
        /// <remarks/>
        public void registerHostAsync(host host, object userState) {
            if ((this.registerHostOperationCompleted == null)) {
                this.registerHostOperationCompleted = new System.Threading.SendOrPostCallback(this.OnregisterHostOperationCompleted);
            }
            this.InvokeAsync("registerHost", new object[] {
                        host}, this.registerHostOperationCompleted, userState);
        }
        
        private void OnregisterHostOperationCompleted(object arg) {
            if ((this.registerHostCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.registerHostCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://addressService.bngper/", ResponseNamespace="http://addressService.bngper/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void unregisterHost([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string ip) {
            this.Invoke("unregisterHost", new object[] {
                        ip});
        }
        
        /// <remarks/>
        public void unregisterHostAsync(string ip) {
            this.unregisterHostAsync(ip, null);
        }
        
        /// <remarks/>
        public void unregisterHostAsync(string ip, object userState) {
            if ((this.unregisterHostOperationCompleted == null)) {
                this.unregisterHostOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunregisterHostOperationCompleted);
            }
            this.InvokeAsync("unregisterHost", new object[] {
                        ip}, this.unregisterHostOperationCompleted, userState);
        }
        
        private void OnunregisterHostOperationCompleted(object arg) {
            if ((this.unregisterHostCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unregisterHostCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://addressService.bngper/", ResponseNamespace="http://addressService.bngper/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getServerVersion() {
            object[] results = this.Invoke("getServerVersion", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getServerVersionAsync() {
            this.getServerVersionAsync(null);
        }
        
        /// <remarks/>
        public void getServerVersionAsync(object userState) {
            if ((this.getServerVersionOperationCompleted == null)) {
                this.getServerVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetServerVersionOperationCompleted);
            }
            this.InvokeAsync("getServerVersion", new object[0], this.getServerVersionOperationCompleted, userState);
        }
        
        private void OngetServerVersionOperationCompleted(object arg) {
            if ((this.getServerVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getServerVersionCompleted(this, new getServerVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://addressService.bngper/", ResponseNamespace="http://addressService.bngper/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public serverSetting getServerSetting() {
            object[] results = this.Invoke("getServerSetting", new object[0]);
            return ((serverSetting)(results[0]));
        }
        
        /// <remarks/>
        public void getServerSettingAsync() {
            this.getServerSettingAsync(null);
        }
        
        /// <remarks/>
        public void getServerSettingAsync(object userState) {
            if ((this.getServerSettingOperationCompleted == null)) {
                this.getServerSettingOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetServerSettingOperationCompleted);
            }
            this.InvokeAsync("getServerSetting", new object[0], this.getServerSettingOperationCompleted, userState);
        }
        
        private void OngetServerSettingOperationCompleted(object arg) {
            if ((this.getServerSettingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getServerSettingCompleted(this, new getServerSettingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://addressService.bngper/", ResponseNamespace="http://addressService.bngper/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void clearHosts([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string password) {
            this.Invoke("clearHosts", new object[] {
                        password});
        }
        
        /// <remarks/>
        public void clearHostsAsync(string password) {
            this.clearHostsAsync(password, null);
        }
        
        /// <remarks/>
        public void clearHostsAsync(string password, object userState) {
            if ((this.clearHostsOperationCompleted == null)) {
                this.clearHostsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnclearHostsOperationCompleted);
            }
            this.InvokeAsync("clearHosts", new object[] {
                        password}, this.clearHostsOperationCompleted, userState);
        }
        
        private void OnclearHostsOperationCompleted(object arg) {
            if ((this.clearHostsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.clearHostsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://addressService.bngper/", ResponseNamespace="http://addressService.bngper/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void clearChat([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string password) {
            this.Invoke("clearChat", new object[] {
                        password});
        }
        
        /// <remarks/>
        public void clearChatAsync(string password) {
            this.clearChatAsync(password, null);
        }
        
        /// <remarks/>
        public void clearChatAsync(string password, object userState) {
            if ((this.clearChatOperationCompleted == null)) {
                this.clearChatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnclearChatOperationCompleted);
            }
            this.InvokeAsync("clearChat", new object[] {
                        password}, this.clearChatOperationCompleted, userState);
        }
        
        private void OnclearChatOperationCompleted(object arg) {
            if ((this.clearChatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.clearChatCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://addressService.bngper/", ResponseNamespace="http://addressService.bngper/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void addAnnounce([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string password, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] announce announce) {
            this.Invoke("addAnnounce", new object[] {
                        password,
                        announce});
        }
        
        /// <remarks/>
        public void addAnnounceAsync(string password, announce announce) {
            this.addAnnounceAsync(password, announce, null);
        }
        
        /// <remarks/>
        public void addAnnounceAsync(string password, announce announce, object userState) {
            if ((this.addAnnounceOperationCompleted == null)) {
                this.addAnnounceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddAnnounceOperationCompleted);
            }
            this.InvokeAsync("addAnnounce", new object[] {
                        password,
                        announce}, this.addAnnounceOperationCompleted, userState);
        }
        
        private void OnaddAnnounceOperationCompleted(object arg) {
            if ((this.addAnnounceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addAnnounceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://addressService.bngper/", ResponseNamespace="http://addressService.bngper/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void removeAnnounce([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string password, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int no) {
            this.Invoke("removeAnnounce", new object[] {
                        password,
                        no});
        }
        
        /// <remarks/>
        public void removeAnnounceAsync(string password, int no) {
            this.removeAnnounceAsync(password, no, null);
        }
        
        /// <remarks/>
        public void removeAnnounceAsync(string password, int no, object userState) {
            if ((this.removeAnnounceOperationCompleted == null)) {
                this.removeAnnounceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveAnnounceOperationCompleted);
            }
            this.InvokeAsync("removeAnnounce", new object[] {
                        password,
                        no}, this.removeAnnounceOperationCompleted, userState);
        }
        
        private void OnremoveAnnounceOperationCompleted(object arg) {
            if ((this.removeAnnounceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeAnnounceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://addressService.bngper/", ResponseNamespace="http://addressService.bngper/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void clearAnnounce([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string password) {
            this.Invoke("clearAnnounce", new object[] {
                        password});
        }
        
        /// <remarks/>
        public void clearAnnounceAsync(string password) {
            this.clearAnnounceAsync(password, null);
        }
        
        /// <remarks/>
        public void clearAnnounceAsync(string password, object userState) {
            if ((this.clearAnnounceOperationCompleted == null)) {
                this.clearAnnounceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnclearAnnounceOperationCompleted);
            }
            this.InvokeAsync("clearAnnounce", new object[] {
                        password}, this.clearAnnounceOperationCompleted, userState);
        }
        
        private void OnclearAnnounceOperationCompleted(object arg) {
            if ((this.clearAnnounceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.clearAnnounceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://addressService.bngper/", ResponseNamespace="http://addressService.bngper/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void forceRegisterHost([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string password, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] host host) {
            this.Invoke("forceRegisterHost", new object[] {
                        password,
                        host});
        }
        
        /// <remarks/>
        public void forceRegisterHostAsync(string password, host host) {
            this.forceRegisterHostAsync(password, host, null);
        }
        
        /// <remarks/>
        public void forceRegisterHostAsync(string password, host host, object userState) {
            if ((this.forceRegisterHostOperationCompleted == null)) {
                this.forceRegisterHostOperationCompleted = new System.Threading.SendOrPostCallback(this.OnforceRegisterHostOperationCompleted);
            }
            this.InvokeAsync("forceRegisterHost", new object[] {
                        password,
                        host}, this.forceRegisterHostOperationCompleted, userState);
        }
        
        private void OnforceRegisterHostOperationCompleted(object arg) {
            if ((this.forceRegisterHostCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.forceRegisterHostCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://addressService.bngper/", ResponseNamespace="http://addressService.bngper/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void forceUnregisterHost([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string password, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int no, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string ip) {
            this.Invoke("forceUnregisterHost", new object[] {
                        password,
                        no,
                        ip});
        }
        
        /// <remarks/>
        public void forceUnregisterHostAsync(string password, int no, string ip) {
            this.forceUnregisterHostAsync(password, no, ip, null);
        }
        
        /// <remarks/>
        public void forceUnregisterHostAsync(string password, int no, string ip, object userState) {
            if ((this.forceUnregisterHostOperationCompleted == null)) {
                this.forceUnregisterHostOperationCompleted = new System.Threading.SendOrPostCallback(this.OnforceUnregisterHostOperationCompleted);
            }
            this.InvokeAsync("forceUnregisterHost", new object[] {
                        password,
                        no,
                        ip}, this.forceUnregisterHostOperationCompleted, userState);
        }
        
        private void OnforceUnregisterHostOperationCompleted(object arg) {
            if ((this.forceUnregisterHostCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.forceUnregisterHostCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://addressService.bngper/", ResponseNamespace="http://addressService.bngper/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void forceSetFighting([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string password, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int no, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string ip, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool fighting) {
            this.Invoke("forceSetFighting", new object[] {
                        password,
                        no,
                        ip,
                        fighting});
        }
        
        /// <remarks/>
        public void forceSetFightingAsync(string password, int no, string ip, bool fighting) {
            this.forceSetFightingAsync(password, no, ip, fighting, null);
        }
        
        /// <remarks/>
        public void forceSetFightingAsync(string password, int no, string ip, bool fighting, object userState) {
            if ((this.forceSetFightingOperationCompleted == null)) {
                this.forceSetFightingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnforceSetFightingOperationCompleted);
            }
            this.InvokeAsync("forceSetFighting", new object[] {
                        password,
                        no,
                        ip,
                        fighting}, this.forceSetFightingOperationCompleted, userState);
        }
        
        private void OnforceSetFightingOperationCompleted(object arg) {
            if ((this.forceSetFightingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.forceSetFightingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://addressService.bngper/", ResponseNamespace="http://addressService.bngper/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void addAdminChat([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string password, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string name, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string color, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string contents) {
            this.Invoke("addAdminChat", new object[] {
                        password,
                        name,
                        color,
                        contents});
        }
        
        /// <remarks/>
        public void addAdminChatAsync(string password, string name, string color, string contents) {
            this.addAdminChatAsync(password, name, color, contents, null);
        }
        
        /// <remarks/>
        public void addAdminChatAsync(string password, string name, string color, string contents, object userState) {
            if ((this.addAdminChatOperationCompleted == null)) {
                this.addAdminChatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddAdminChatOperationCompleted);
            }
            this.InvokeAsync("addAdminChat", new object[] {
                        password,
                        name,
                        color,
                        contents}, this.addAdminChatOperationCompleted, userState);
        }
        
        private void OnaddAdminChatOperationCompleted(object arg) {
            if ((this.addAdminChatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addAdminChatCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://addressService.bngper/", ResponseNamespace="http://addressService.bngper/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getAddressById([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string password, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string id) {
            object[] results = this.Invoke("getAddressById", new object[] {
                        password,
                        id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getAddressByIdAsync(string password, string id) {
            this.getAddressByIdAsync(password, id, null);
        }
        
        /// <remarks/>
        public void getAddressByIdAsync(string password, string id, object userState) {
            if ((this.getAddressByIdOperationCompleted == null)) {
                this.getAddressByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAddressByIdOperationCompleted);
            }
            this.InvokeAsync("getAddressById", new object[] {
                        password,
                        id}, this.getAddressByIdOperationCompleted, userState);
        }
        
        private void OngetAddressByIdOperationCompleted(object arg) {
            if ((this.getAddressByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAddressByIdCompleted(this, new getAddressByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://addressService.bngper/", ResponseNamespace="http://addressService.bngper/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setEnableRemoteAdmin([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string password, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool enable) {
            this.Invoke("setEnableRemoteAdmin", new object[] {
                        password,
                        enable});
        }
        
        /// <remarks/>
        public void setEnableRemoteAdminAsync(string password, bool enable) {
            this.setEnableRemoteAdminAsync(password, enable, null);
        }
        
        /// <remarks/>
        public void setEnableRemoteAdminAsync(string password, bool enable, object userState) {
            if ((this.setEnableRemoteAdminOperationCompleted == null)) {
                this.setEnableRemoteAdminOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetEnableRemoteAdminOperationCompleted);
            }
            this.InvokeAsync("setEnableRemoteAdmin", new object[] {
                        password,
                        enable}, this.setEnableRemoteAdminOperationCompleted, userState);
        }
        
        private void OnsetEnableRemoteAdminOperationCompleted(object arg) {
            if ((this.setEnableRemoteAdminCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setEnableRemoteAdminCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://addressService.bngper/", ResponseNamespace="http://addressService.bngper/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int getUserCount() {
            object[] results = this.Invoke("getUserCount", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getUserCountAsync() {
            this.getUserCountAsync(null);
        }
        
        /// <remarks/>
        public void getUserCountAsync(object userState) {
            if ((this.getUserCountOperationCompleted == null)) {
                this.getUserCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserCountOperationCompleted);
            }
            this.InvokeAsync("getUserCount", new object[0], this.getUserCountOperationCompleted, userState);
        }
        
        private void OngetUserCountOperationCompleted(object arg) {
            if ((this.getUserCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserCountCompleted(this, new getUserCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://addressService.bngper/", ResponseNamespace="http://addressService.bngper/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void enter() {
            this.Invoke("enter", new object[0]);
        }
        
        /// <remarks/>
        public void enterAsync() {
            this.enterAsync(null);
        }
        
        /// <remarks/>
        public void enterAsync(object userState) {
            if ((this.enterOperationCompleted == null)) {
                this.enterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnenterOperationCompleted);
            }
            this.InvokeAsync("enter", new object[0], this.enterOperationCompleted, userState);
        }
        
        private void OnenterOperationCompleted(object arg) {
            if ((this.enterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.enterCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://addressService.bngper/", ResponseNamespace="http://addressService.bngper/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setFighting([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string ip, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool fighting) {
            this.Invoke("setFighting", new object[] {
                        ip,
                        fighting});
        }
        
        /// <remarks/>
        public void setFightingAsync(string ip, bool fighting) {
            this.setFightingAsync(ip, fighting, null);
        }
        
        /// <remarks/>
        public void setFightingAsync(string ip, bool fighting, object userState) {
            if ((this.setFightingOperationCompleted == null)) {
                this.setFightingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetFightingOperationCompleted);
            }
            this.InvokeAsync("setFighting", new object[] {
                        ip,
                        fighting}, this.setFightingOperationCompleted, userState);
        }
        
        private void OnsetFightingOperationCompleted(object arg) {
            if ((this.setFightingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setFightingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://addressService.bngper/", ResponseNamespace="http://addressService.bngper/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void addChat([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string name, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string color, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string contents) {
            this.Invoke("addChat", new object[] {
                        name,
                        color,
                        contents});
        }
        
        /// <remarks/>
        public void addChatAsync(string name, string color, string contents) {
            this.addChatAsync(name, color, contents, null);
        }
        
        /// <remarks/>
        public void addChatAsync(string name, string color, string contents, object userState) {
            if ((this.addChatOperationCompleted == null)) {
                this.addChatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddChatOperationCompleted);
            }
            this.InvokeAsync("addChat", new object[] {
                        name,
                        color,
                        contents}, this.addChatOperationCompleted, userState);
        }
        
        private void OnaddChatOperationCompleted(object arg) {
            if ((this.addChatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addChatCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://addressService.bngper/", ResponseNamespace="http://addressService.bngper/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public allData getAllData([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool getHost, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool getChat, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] System.DateTime lastHostTime, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool lastHostTimeSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] System.DateTime lastChatTime, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool lastChatTimeSpecified) {
            object[] results = this.Invoke("getAllData", new object[] {
                        getHost,
                        getChat,
                        lastHostTime,
                        lastHostTimeSpecified,
                        lastChatTime,
                        lastChatTimeSpecified});
            return ((allData)(results[0]));
        }
        
        /// <remarks/>
        public void getAllDataAsync(bool getHost, bool getChat, System.DateTime lastHostTime, bool lastHostTimeSpecified, System.DateTime lastChatTime, bool lastChatTimeSpecified) {
            this.getAllDataAsync(getHost, getChat, lastHostTime, lastHostTimeSpecified, lastChatTime, lastChatTimeSpecified, null);
        }
        
        /// <remarks/>
        public void getAllDataAsync(bool getHost, bool getChat, System.DateTime lastHostTime, bool lastHostTimeSpecified, System.DateTime lastChatTime, bool lastChatTimeSpecified, object userState) {
            if ((this.getAllDataOperationCompleted == null)) {
                this.getAllDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllDataOperationCompleted);
            }
            this.InvokeAsync("getAllData", new object[] {
                        getHost,
                        getChat,
                        lastHostTime,
                        lastHostTimeSpecified,
                        lastChatTime,
                        lastChatTimeSpecified}, this.getAllDataOperationCompleted, userState);
        }
        
        private void OngetAllDataOperationCompleted(object arg) {
            if ((this.getAllDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllDataCompleted(this, new getAllDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://addressService.bngper/", ResponseNamespace="http://addressService.bngper/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void leave() {
            this.Invoke("leave", new object[0]);
        }
        
        /// <remarks/>
        public void leaveAsync() {
            this.leaveAsync(null);
        }
        
        /// <remarks/>
        public void leaveAsync(object userState) {
            if ((this.leaveOperationCompleted == null)) {
                this.leaveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnleaveOperationCompleted);
            }
            this.InvokeAsync("leave", new object[0], this.leaveOperationCompleted, userState);
        }
        
        private void OnleaveOperationCompleted(object arg) {
            if ((this.leaveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.leaveCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3074")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://addressService.bngper/")]
    public partial class host {
        
        private int noField;
        
        private id idField;
        
        private System.DateTime timeField;
        
        private bool timeFieldSpecified;
        
        private string ipField;
        
        private int portField;
        
        private string rankField;
        
        private string commentField;
        
        private bool fightingField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int No {
            get {
                return this.noField;
            }
            set {
                this.noField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public id Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime Time {
            get {
                return this.timeField;
            }
            set {
                this.timeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TimeSpecified {
            get {
                return this.timeFieldSpecified;
            }
            set {
                this.timeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Ip {
            get {
                return this.ipField;
            }
            set {
                this.ipField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int Port {
            get {
                return this.portField;
            }
            set {
                this.portField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Rank {
            get {
                return this.rankField;
            }
            set {
                this.rankField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool fighting {
            get {
                return this.fightingField;
            }
            set {
                this.fightingField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3074")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://addressService.bngper/")]
    public partial class id {
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3074")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://addressService.bngper/")]
    public partial class chat {
        
        private id idField;
        
        private System.DateTime timeField;
        
        private bool timeFieldSpecified;
        
        private string nameField;
        
        private string colorField;
        
        private string contentsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public id Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.DateTime Time {
            get {
                return this.timeField;
            }
            set {
                this.timeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TimeSpecified {
            get {
                return this.timeFieldSpecified;
            }
            set {
                this.timeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Color {
            get {
                return this.colorField;
            }
            set {
                this.colorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Contents {
            get {
                return this.contentsField;
            }
            set {
                this.contentsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3074")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://addressService.bngper/")]
    public partial class allData {
        
        private int userCountField;
        
        private announce[] announcesField;
        
        private host[] hostsField;
        
        private chat[] chatsField;
        
        private bool getHostField;
        
        private bool getChatField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int UserCount {
            get {
                return this.userCountField;
            }
            set {
                this.userCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Announces", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public announce[] Announces {
            get {
                return this.announcesField;
            }
            set {
                this.announcesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Hosts", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public host[] Hosts {
            get {
                return this.hostsField;
            }
            set {
                this.hostsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Chats", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public chat[] Chats {
            get {
                return this.chatsField;
            }
            set {
                this.chatsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool GetHost {
            get {
                return this.getHostField;
            }
            set {
                this.getHostField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool GetChat {
            get {
                return this.getChatField;
            }
            set {
                this.getChatField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3074")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://addressService.bngper/")]
    public partial class announce {
        
        private string colorField;
        
        private string contentsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Color {
            get {
                return this.colorField;
            }
            set {
                this.colorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Contents {
            get {
                return this.contentsField;
            }
            set {
                this.contentsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3074")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://addressService.bngper/")]
    public partial class extraSetting {
        
        private string nameField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3074")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://addressService.bngper/")]
    public partial class serverSetting {
        
        private int rankMaxLengthField;
        
        private int commentMaxLengthField;
        
        private int chatMaxLengthField;
        
        private bool enableChatField;
        
        private bool enableChatPrefixField;
        
        private extraSetting[] extraSettingsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int RankMaxLength {
            get {
                return this.rankMaxLengthField;
            }
            set {
                this.rankMaxLengthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int CommentMaxLength {
            get {
                return this.commentMaxLengthField;
            }
            set {
                this.commentMaxLengthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int ChatMaxLength {
            get {
                return this.chatMaxLengthField;
            }
            set {
                this.chatMaxLengthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool EnableChat {
            get {
                return this.enableChatField;
            }
            set {
                this.enableChatField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool EnableChatPrefix {
            get {
                return this.enableChatPrefixField;
            }
            set {
                this.enableChatPrefixField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ExtraSettings", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public extraSetting[] ExtraSettings {
            get {
                return this.extraSettingsField;
            }
            set {
                this.extraSettingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void registerHostCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void unregisterHostCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getServerVersionCompletedEventHandler(object sender, getServerVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getServerVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getServerVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getServerSettingCompletedEventHandler(object sender, getServerSettingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getServerSettingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getServerSettingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public serverSetting Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((serverSetting)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void clearHostsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void clearChatCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void addAnnounceCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void removeAnnounceCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void clearAnnounceCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void forceRegisterHostCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void forceUnregisterHostCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void forceSetFightingCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void addAdminChatCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getAddressByIdCompletedEventHandler(object sender, getAddressByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAddressByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAddressByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void setEnableRemoteAdminCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getUserCountCompletedEventHandler(object sender, getUserCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void enterCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void setFightingCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void addChatCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getAllDataCompletedEventHandler(object sender, getAllDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public allData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((allData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void leaveCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591